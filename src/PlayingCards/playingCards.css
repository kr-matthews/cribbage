:root {
  --card-dim-ratio: 16 / 25; /* based on the background image */
  --card-height: 150px; /* scale everything by changing just this */
  --card-width: calc(var(--card-height) * var(--card-dim-ratio));

  --border-width: calc(var(--card-height) / 50);

  --stack-vert-spacing: calc(var(--card-height) / 200);
  --stack-hori-spacing: calc(var(--card-width) / 16);
}

.card {
  height: var(--card-height);
  width: var(--card-width);

  /* picked to work well with background image's own border */
  border-style: solid;
  border-width: var(--border-width);
  border-radius: calc(var(--card-height) * 3 / 50);

  background-position: center;
}

/* types of cards */

.face-up {
  background-color: White;
}

.selected {
  border-color: Red;
  background-color: LightGrey;
}

.not-selected {
  border-color: #0b2652; /* attempt to match background picture */
}

.clickable:hover {
  cursor: pointer;
}

/* inside cards */

.card-info {
  width: calc(var(--card-width) * 9 / 32);
  padding: calc(var(--card-height) / 100) 0;

  text-align: center;
  font-size: calc(var(--card-width) / 4);
}

.card-info img {
  width: calc(var(--card-width) * 3 / 16);
}

.red-suit .card-info {
  color: #85221b; /* attempt to match suit image colours */
}

/* groupings of cards */

.stack {
  display: flex;
  /* margin: 0 auto; */
}

.deck {
  display: flex; /* puts both halves on the same row when cut */
  /* the max size that a split full deck takes up */
  height: calc(
    var(--card-height) + (2 * var(--border-width)) +
      (var(--stack-vert-spacing) * 17)
  );
  width: calc(
    (2 * var(--card-width)) + (2 * var(--border-width)) +
      (var(--stack-hori-spacing) * 17)
  );
}
